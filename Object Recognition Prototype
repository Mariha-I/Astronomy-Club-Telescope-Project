import tensorflow as tf
import cv2
import numpy as np

model = tf.keras.applications.MobileNetV2(weights='imagenet')

def preprocess_image(image_path):
    # Load the image
    img = cv2.imread(image_path)

    # Resize the image to fit the model's expected input size
    img_resized = cv2.resize(img, (224, 224)) # MobileNetV2 expects 224x224

    # Convert image to RGB (OpenCV loads images in BGR format)
    img_rgb = cv2.cvtColor(img_resized, cv2.COLOR_BGR2RGB)

    #Preprocess for MobileNetV2 (which expects images to be scaled)
    img_preprocessed = tf.keras.applications.mobilenet_v2.preprocess_input(img_rgb)

    # Expand dimensions to match model input shape (batch size, height, width, channels)
    img_expanded = np.expand_dims(img_preprocessed, axis=0)

    return img_expanded

def predict_image(image_path):
    img = preprocess_image(image_path)

    # Get model predictions
    predictions = model.predict(img)

    #Decode the predictions to human readable labels
    decoded_predictions = tf.keras.applications.mobilenet_v2.decode_predictions(predictions)

    #output top prediction
    return decoded_predictions[0][0][1], decoded_predictions[0][0][2] # Label and confidence

image_path = "path_to_your_image.jpg" # Replace this text with your image path
label, confidence = predict_image(image_path)
print(f"Predicted subject: {label} with confidence: {confidence}")
